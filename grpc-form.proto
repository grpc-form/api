syntax = "proto3";
package grpcform;
option go_package = "grpcform";

service FormService {
    rpc GetForm(GetFormRequest) returns (Form) {}
    rpc ValidateForm(Form) returns (Form) {}
    rpc SendForm(Form) returns (SendFormResponse) {}
}

message GetFormRequest {
    string name = 1;
}

message SendFormResponse {
    Form form = 1;
    bool succeed = 2;
    string message = 3;
}

message Form {
    string name = 1;
    repeated Field fields = 2;
    repeated Button buttons = 3;
    bool valid = 4;
}

message Field {
    string label = 1;
    FieldStatus status = 2;
    bool instant_validate = 3;
    string error = 4;
    TextField text_field = 10;
    SelectField select_field = 11;
    NumericField numeric_field = 12;
    ActiveIf activeIf = 20;
    RequiredIf required_if = 21;
    DisabledIf disabled_if = 22;
    HiddenIf hidden_if = 23;
}

enum FieldStatus {
    FIELD_STATUS_UNSPECIFIED = 0;
    FIELD_STATUS_ACTIVE = 1;
    FIELD_STATUS_REQUIRED = 2;
    FIELD_STATUS_DISABLED = 3;
    FIELD_STATUS_HIDDEN = 4;
}

message ActiveIf {
    repeated Validator validators = 1;
}

message RequiredIf {
    repeated Validator validators = 1;
}

message DisabledIf {
     repeated Validator validators = 1;
}

message HiddenIf {
    repeated Validator validators = 1;
}

message Validator {
    int64 index = 1;
    string text_is_equal = 10;
    int64 length_smaller_than = 11;
    int64 length_greater_than = 12;
    int64 number_is_equal = 20;
    int64 number_smaller_than = 21;
    int64 number_greater_than = 22;
    string match_regex_pattern = 30;
}

message TextField {
    string value = 1;
    repeated Option options = 2;
    int64 min = 10;
    string min_error = 20;
    int64 max = 11;
    string max_error = 21;
    string regex = 12;
    string regex_error = 22;
}

message SelectField {
    int64 index = 1;
    SelectType type = 2;
    repeated Option options = 3;
    string error = 4;
}

message Option {
    int64 index = 1;
    string value = 2;
}

enum SelectType {
    SELECT_TYPE_UNSPECIFIED = 0;
    SELECT_TYPE_SIMPLE = 1;
    SELECT_TYPE_MULTI = 2;
}

message NumericField {
    int64 value = 1;
    int64 step = 2;
    int64 min = 10;
    string min_error = 20;
    int64 max = 11;
    string max_error = 21;
}

message Button {
    string label = 1;
    ButtonStatus status = 2;
    ButtonFuncType type = 3;
}

enum ButtonStatus {
    BUTTON_STATUS_UNSPECIFIED = 0;
    BUTTON_ACTIVE = 1;
    BUTTON_DISABLED = 3;
    BUTTON_HIDDEN = 4;
}

enum ButtonFuncType {
    BUTTON_FUNC_UNSPECIFIED = 0;
    BUTTON_FUNC_VALIDATE = 1;
    BUTTON_FUNC_RESET = 2;
    BUTTON_FUNC_SEND = 3;
}
