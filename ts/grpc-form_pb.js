/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.grpcform.ActiveIf', null, global);
goog.exportSymbol('proto.grpcform.BUTTON_FUNC', null, global);
goog.exportSymbol('proto.grpcform.Button', null, global);
goog.exportSymbol('proto.grpcform.DisabledIf', null, global);
goog.exportSymbol('proto.grpcform.Field', null, global);
goog.exportSymbol('proto.grpcform.Form', null, global);
goog.exportSymbol('proto.grpcform.GetFormRequest', null, global);
goog.exportSymbol('proto.grpcform.HiddenIf', null, global);
goog.exportSymbol('proto.grpcform.Input', null, global);
goog.exportSymbol('proto.grpcform.MaxLength', null, global);
goog.exportSymbol('proto.grpcform.MinLength', null, global);
goog.exportSymbol('proto.grpcform.Option', null, global);
goog.exportSymbol('proto.grpcform.RadioGroup', null, global);
goog.exportSymbol('proto.grpcform.Regex', null, global);
goog.exportSymbol('proto.grpcform.RequiredIf', null, global);
goog.exportSymbol('proto.grpcform.STATUS', null, global);
goog.exportSymbol('proto.grpcform.Select', null, global);
goog.exportSymbol('proto.grpcform.SendFormResponse', null, global);
goog.exportSymbol('proto.grpcform.Slider', null, global);
goog.exportSymbol('proto.grpcform.Validator', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.GetFormRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.GetFormRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.GetFormRequest.displayName = 'proto.grpcform.GetFormRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.SendFormResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.SendFormResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.SendFormResponse.displayName = 'proto.grpcform.SendFormResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Form = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.Form.repeatedFields_, null);
};
goog.inherits(proto.grpcform.Form, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Form.displayName = 'proto.grpcform.Form';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Field = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.Field, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Field.displayName = 'proto.grpcform.Field';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.ActiveIf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.ActiveIf.repeatedFields_, null);
};
goog.inherits(proto.grpcform.ActiveIf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.ActiveIf.displayName = 'proto.grpcform.ActiveIf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.RequiredIf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.RequiredIf.repeatedFields_, null);
};
goog.inherits(proto.grpcform.RequiredIf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.RequiredIf.displayName = 'proto.grpcform.RequiredIf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.DisabledIf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.DisabledIf.repeatedFields_, null);
};
goog.inherits(proto.grpcform.DisabledIf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.DisabledIf.displayName = 'proto.grpcform.DisabledIf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.HiddenIf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.HiddenIf.repeatedFields_, null);
};
goog.inherits(proto.grpcform.HiddenIf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.HiddenIf.displayName = 'proto.grpcform.HiddenIf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Validator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.Validator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Validator.displayName = 'proto.grpcform.Validator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Input = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.Input.repeatedFields_, null);
};
goog.inherits(proto.grpcform.Input, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Input.displayName = 'proto.grpcform.Input';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.RadioGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.RadioGroup.repeatedFields_, null);
};
goog.inherits(proto.grpcform.RadioGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.RadioGroup.displayName = 'proto.grpcform.RadioGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Select = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.Select.repeatedFields_, null);
};
goog.inherits(proto.grpcform.Select, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Select.displayName = 'proto.grpcform.Select';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Slider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.Slider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Slider.displayName = 'proto.grpcform.Slider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Option = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.Option, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Option.displayName = 'proto.grpcform.Option';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.MinLength = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.MinLength, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.MinLength.displayName = 'proto.grpcform.MinLength';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.MaxLength = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.MaxLength, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.MaxLength.displayName = 'proto.grpcform.MaxLength';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Regex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.Regex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Regex.displayName = 'proto.grpcform.Regex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Button = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.Button, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Button.displayName = 'proto.grpcform.Button';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.GetFormRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.GetFormRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.GetFormRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.GetFormRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.GetFormRequest}
 */
proto.grpcform.GetFormRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.GetFormRequest;
  return proto.grpcform.GetFormRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.GetFormRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.GetFormRequest}
 */
proto.grpcform.GetFormRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.GetFormRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.GetFormRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.GetFormRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.GetFormRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.grpcform.GetFormRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.GetFormRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.SendFormResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.SendFormResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.SendFormResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.SendFormResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    form: (f = msg.getForm()) && proto.grpcform.Form.toObject(includeInstance, f),
    succeed: jspb.Message.getFieldWithDefault(msg, 2, false),
    message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.SendFormResponse}
 */
proto.grpcform.SendFormResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.SendFormResponse;
  return proto.grpcform.SendFormResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.SendFormResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.SendFormResponse}
 */
proto.grpcform.SendFormResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Form;
      reader.readMessage(value,proto.grpcform.Form.deserializeBinaryFromReader);
      msg.setForm(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSucceed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.SendFormResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.SendFormResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.SendFormResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.SendFormResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForm();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.grpcform.Form.serializeBinaryToWriter
    );
  }
  f = message.getSucceed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Form form = 1;
 * @return {?proto.grpcform.Form}
 */
proto.grpcform.SendFormResponse.prototype.getForm = function() {
  return /** @type{?proto.grpcform.Form} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Form, 1));
};


/** @param {?proto.grpcform.Form|undefined} value */
proto.grpcform.SendFormResponse.prototype.setForm = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.SendFormResponse.prototype.clearForm = function() {
  this.setForm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.SendFormResponse.prototype.hasForm = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool succeed = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.grpcform.SendFormResponse.prototype.getSucceed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.grpcform.SendFormResponse.prototype.setSucceed = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.grpcform.SendFormResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.grpcform.SendFormResponse.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.Form.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Form.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Form.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Form} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Form.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.grpcform.Field.toObject, includeInstance),
    buttonsList: jspb.Message.toObjectList(msg.getButtonsList(),
    proto.grpcform.Button.toObject, includeInstance),
    valid: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Form}
 */
proto.grpcform.Form.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Form;
  return proto.grpcform.Form.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Form} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Form}
 */
proto.grpcform.Form.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.grpcform.Field;
      reader.readMessage(value,proto.grpcform.Field.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 3:
      var value = new proto.grpcform.Button;
      reader.readMessage(value,proto.grpcform.Button.deserializeBinaryFromReader);
      msg.addButtons(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Form.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Form.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Form} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Form.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.grpcform.Field.serializeBinaryToWriter
    );
  }
  f = message.getButtonsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.grpcform.Button.serializeBinaryToWriter
    );
  }
  f = message.getValid();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.grpcform.Form.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.Form.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Field fields = 2;
 * @return {!Array<!proto.grpcform.Field>}
 */
proto.grpcform.Form.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.grpcform.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Field, 2));
};


/** @param {!Array<!proto.grpcform.Field>} value */
proto.grpcform.Form.prototype.setFieldsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.grpcform.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Field}
 */
proto.grpcform.Form.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.grpcform.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.Form.prototype.clearFieldsList = function() {
  this.setFieldsList([]);
};


/**
 * repeated Button buttons = 3;
 * @return {!Array<!proto.grpcform.Button>}
 */
proto.grpcform.Form.prototype.getButtonsList = function() {
  return /** @type{!Array<!proto.grpcform.Button>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Button, 3));
};


/** @param {!Array<!proto.grpcform.Button>} value */
proto.grpcform.Form.prototype.setButtonsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.grpcform.Button=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Button}
 */
proto.grpcform.Form.prototype.addButtons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.grpcform.Button, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.Form.prototype.clearButtonsList = function() {
  this.setButtonsList([]);
};


/**
 * optional bool valid = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.grpcform.Form.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.grpcform.Form.prototype.setValid = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Field.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Field.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Field} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Field.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    activeif: (f = msg.getActiveif()) && proto.grpcform.ActiveIf.toObject(includeInstance, f),
    requiredif: (f = msg.getRequiredif()) && proto.grpcform.RequiredIf.toObject(includeInstance, f),
    disabledif: (f = msg.getDisabledif()) && proto.grpcform.DisabledIf.toObject(includeInstance, f),
    hiddenif: (f = msg.getHiddenif()) && proto.grpcform.HiddenIf.toObject(includeInstance, f),
    instantValidate: jspb.Message.getFieldWithDefault(msg, 7, false),
    error: jspb.Message.getFieldWithDefault(msg, 8, ""),
    input: (f = msg.getInput()) && proto.grpcform.Input.toObject(includeInstance, f),
    radioGroup: (f = msg.getRadioGroup()) && proto.grpcform.RadioGroup.toObject(includeInstance, f),
    select: (f = msg.getSelect()) && proto.grpcform.Select.toObject(includeInstance, f),
    slider: (f = msg.getSlider()) && proto.grpcform.Slider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Field}
 */
proto.grpcform.Field.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Field;
  return proto.grpcform.Field.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Field} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Field}
 */
proto.grpcform.Field.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {!proto.grpcform.STATUS} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.grpcform.ActiveIf;
      reader.readMessage(value,proto.grpcform.ActiveIf.deserializeBinaryFromReader);
      msg.setActiveif(value);
      break;
    case 4:
      var value = new proto.grpcform.RequiredIf;
      reader.readMessage(value,proto.grpcform.RequiredIf.deserializeBinaryFromReader);
      msg.setRequiredif(value);
      break;
    case 5:
      var value = new proto.grpcform.DisabledIf;
      reader.readMessage(value,proto.grpcform.DisabledIf.deserializeBinaryFromReader);
      msg.setDisabledif(value);
      break;
    case 6:
      var value = new proto.grpcform.HiddenIf;
      reader.readMessage(value,proto.grpcform.HiddenIf.deserializeBinaryFromReader);
      msg.setHiddenif(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInstantValidate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 9:
      var value = new proto.grpcform.Input;
      reader.readMessage(value,proto.grpcform.Input.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    case 10:
      var value = new proto.grpcform.RadioGroup;
      reader.readMessage(value,proto.grpcform.RadioGroup.deserializeBinaryFromReader);
      msg.setRadioGroup(value);
      break;
    case 11:
      var value = new proto.grpcform.Select;
      reader.readMessage(value,proto.grpcform.Select.deserializeBinaryFromReader);
      msg.setSelect(value);
      break;
    case 12:
      var value = new proto.grpcform.Slider;
      reader.readMessage(value,proto.grpcform.Slider.deserializeBinaryFromReader);
      msg.setSlider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Field.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Field.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Field} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Field.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getActiveif();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.grpcform.ActiveIf.serializeBinaryToWriter
    );
  }
  f = message.getRequiredif();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.grpcform.RequiredIf.serializeBinaryToWriter
    );
  }
  f = message.getDisabledif();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.grpcform.DisabledIf.serializeBinaryToWriter
    );
  }
  f = message.getHiddenif();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.grpcform.HiddenIf.serializeBinaryToWriter
    );
  }
  f = message.getInstantValidate();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.grpcform.Input.serializeBinaryToWriter
    );
  }
  f = message.getRadioGroup();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.grpcform.RadioGroup.serializeBinaryToWriter
    );
  }
  f = message.getSelect();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.grpcform.Select.serializeBinaryToWriter
    );
  }
  f = message.getSlider();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.grpcform.Slider.serializeBinaryToWriter
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.grpcform.Field.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.Field.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional STATUS status = 2;
 * @return {!proto.grpcform.STATUS}
 */
proto.grpcform.Field.prototype.getStatus = function() {
  return /** @type {!proto.grpcform.STATUS} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.grpcform.STATUS} value */
proto.grpcform.Field.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ActiveIf activeIf = 3;
 * @return {?proto.grpcform.ActiveIf}
 */
proto.grpcform.Field.prototype.getActiveif = function() {
  return /** @type{?proto.grpcform.ActiveIf} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.ActiveIf, 3));
};


/** @param {?proto.grpcform.ActiveIf|undefined} value */
proto.grpcform.Field.prototype.setActiveif = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearActiveif = function() {
  this.setActiveif(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasActiveif = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RequiredIf requiredIf = 4;
 * @return {?proto.grpcform.RequiredIf}
 */
proto.grpcform.Field.prototype.getRequiredif = function() {
  return /** @type{?proto.grpcform.RequiredIf} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.RequiredIf, 4));
};


/** @param {?proto.grpcform.RequiredIf|undefined} value */
proto.grpcform.Field.prototype.setRequiredif = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearRequiredif = function() {
  this.setRequiredif(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasRequiredif = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DisabledIf disabledIf = 5;
 * @return {?proto.grpcform.DisabledIf}
 */
proto.grpcform.Field.prototype.getDisabledif = function() {
  return /** @type{?proto.grpcform.DisabledIf} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.DisabledIf, 5));
};


/** @param {?proto.grpcform.DisabledIf|undefined} value */
proto.grpcform.Field.prototype.setDisabledif = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearDisabledif = function() {
  this.setDisabledif(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasDisabledif = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional HiddenIf hiddenIf = 6;
 * @return {?proto.grpcform.HiddenIf}
 */
proto.grpcform.Field.prototype.getHiddenif = function() {
  return /** @type{?proto.grpcform.HiddenIf} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.HiddenIf, 6));
};


/** @param {?proto.grpcform.HiddenIf|undefined} value */
proto.grpcform.Field.prototype.setHiddenif = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearHiddenif = function() {
  this.setHiddenif(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasHiddenif = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool instant_validate = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.getInstantValidate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.grpcform.Field.prototype.setInstantValidate = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string error = 8;
 * @return {string}
 */
proto.grpcform.Field.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.grpcform.Field.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Input input = 9;
 * @return {?proto.grpcform.Input}
 */
proto.grpcform.Field.prototype.getInput = function() {
  return /** @type{?proto.grpcform.Input} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Input, 9));
};


/** @param {?proto.grpcform.Input|undefined} value */
proto.grpcform.Field.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasInput = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional RadioGroup radio_group = 10;
 * @return {?proto.grpcform.RadioGroup}
 */
proto.grpcform.Field.prototype.getRadioGroup = function() {
  return /** @type{?proto.grpcform.RadioGroup} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.RadioGroup, 10));
};


/** @param {?proto.grpcform.RadioGroup|undefined} value */
proto.grpcform.Field.prototype.setRadioGroup = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearRadioGroup = function() {
  this.setRadioGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasRadioGroup = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Select select = 11;
 * @return {?proto.grpcform.Select}
 */
proto.grpcform.Field.prototype.getSelect = function() {
  return /** @type{?proto.grpcform.Select} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Select, 11));
};


/** @param {?proto.grpcform.Select|undefined} value */
proto.grpcform.Field.prototype.setSelect = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearSelect = function() {
  this.setSelect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasSelect = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Slider slider = 12;
 * @return {?proto.grpcform.Slider}
 */
proto.grpcform.Field.prototype.getSlider = function() {
  return /** @type{?proto.grpcform.Slider} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Slider, 12));
};


/** @param {?proto.grpcform.Slider|undefined} value */
proto.grpcform.Field.prototype.setSlider = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearSlider = function() {
  this.setSlider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasSlider = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.ActiveIf.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.ActiveIf.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.ActiveIf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.ActiveIf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.ActiveIf.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.grpcform.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.ActiveIf}
 */
proto.grpcform.ActiveIf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.ActiveIf;
  return proto.grpcform.ActiveIf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.ActiveIf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.ActiveIf}
 */
proto.grpcform.ActiveIf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Validator;
      reader.readMessage(value,proto.grpcform.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.ActiveIf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.ActiveIf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.ActiveIf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.ActiveIf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpcform.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Validator validators = 1;
 * @return {!Array<!proto.grpcform.Validator>}
 */
proto.grpcform.ActiveIf.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.grpcform.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Validator, 1));
};


/** @param {!Array<!proto.grpcform.Validator>} value */
proto.grpcform.ActiveIf.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpcform.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.ActiveIf.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpcform.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.ActiveIf.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.RequiredIf.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.RequiredIf.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.RequiredIf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.RequiredIf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.RequiredIf.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.grpcform.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.RequiredIf}
 */
proto.grpcform.RequiredIf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.RequiredIf;
  return proto.grpcform.RequiredIf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.RequiredIf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.RequiredIf}
 */
proto.grpcform.RequiredIf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Validator;
      reader.readMessage(value,proto.grpcform.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.RequiredIf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.RequiredIf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.RequiredIf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.RequiredIf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpcform.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Validator validators = 1;
 * @return {!Array<!proto.grpcform.Validator>}
 */
proto.grpcform.RequiredIf.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.grpcform.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Validator, 1));
};


/** @param {!Array<!proto.grpcform.Validator>} value */
proto.grpcform.RequiredIf.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpcform.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.RequiredIf.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpcform.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.RequiredIf.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.DisabledIf.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.DisabledIf.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.DisabledIf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.DisabledIf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.DisabledIf.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.grpcform.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.DisabledIf}
 */
proto.grpcform.DisabledIf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.DisabledIf;
  return proto.grpcform.DisabledIf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.DisabledIf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.DisabledIf}
 */
proto.grpcform.DisabledIf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Validator;
      reader.readMessage(value,proto.grpcform.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.DisabledIf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.DisabledIf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.DisabledIf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.DisabledIf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpcform.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Validator validators = 1;
 * @return {!Array<!proto.grpcform.Validator>}
 */
proto.grpcform.DisabledIf.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.grpcform.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Validator, 1));
};


/** @param {!Array<!proto.grpcform.Validator>} value */
proto.grpcform.DisabledIf.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpcform.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.DisabledIf.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpcform.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.DisabledIf.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.HiddenIf.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.HiddenIf.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.HiddenIf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.HiddenIf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.HiddenIf.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.grpcform.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.HiddenIf}
 */
proto.grpcform.HiddenIf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.HiddenIf;
  return proto.grpcform.HiddenIf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.HiddenIf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.HiddenIf}
 */
proto.grpcform.HiddenIf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Validator;
      reader.readMessage(value,proto.grpcform.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.HiddenIf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.HiddenIf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.HiddenIf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.HiddenIf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpcform.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Validator validators = 1;
 * @return {!Array<!proto.grpcform.Validator>}
 */
proto.grpcform.HiddenIf.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.grpcform.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Validator, 1));
};


/** @param {!Array<!proto.grpcform.Validator>} value */
proto.grpcform.HiddenIf.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpcform.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.HiddenIf.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpcform.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.HiddenIf.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Validator.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Validator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Validator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Validator.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    equalText: jspb.Message.getFieldWithDefault(msg, 2, ""),
    equalOption: (f = msg.getEqualOption()) && proto.grpcform.Option.toObject(includeInstance, f),
    equalNumber: jspb.Message.getFieldWithDefault(msg, 4, 0),
    smallerThanNumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    greaterThanNumber: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.Validator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Validator;
  return proto.grpcform.Validator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Validator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.Validator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEqualText(value);
      break;
    case 3:
      var value = new proto.grpcform.Option;
      reader.readMessage(value,proto.grpcform.Option.deserializeBinaryFromReader);
      msg.setEqualOption(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEqualNumber(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmallerThanNumber(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGreaterThanNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Validator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Validator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Validator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Validator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEqualText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEqualOption();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.grpcform.Option.serializeBinaryToWriter
    );
  }
  f = message.getEqualNumber();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSmallerThanNumber();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getGreaterThanNumber();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional int64 index = 1;
 * @return {number}
 */
proto.grpcform.Validator.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grpcform.Validator.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string equal_text = 2;
 * @return {string}
 */
proto.grpcform.Validator.prototype.getEqualText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpcform.Validator.prototype.setEqualText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Option equal_option = 3;
 * @return {?proto.grpcform.Option}
 */
proto.grpcform.Validator.prototype.getEqualOption = function() {
  return /** @type{?proto.grpcform.Option} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Option, 3));
};


/** @param {?proto.grpcform.Option|undefined} value */
proto.grpcform.Validator.prototype.setEqualOption = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Validator.prototype.clearEqualOption = function() {
  this.setEqualOption(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Validator.prototype.hasEqualOption = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 equal_number = 4;
 * @return {number}
 */
proto.grpcform.Validator.prototype.getEqualNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.grpcform.Validator.prototype.setEqualNumber = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 smaller_than_number = 5;
 * @return {number}
 */
proto.grpcform.Validator.prototype.getSmallerThanNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.grpcform.Validator.prototype.setSmallerThanNumber = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 greater_than_number = 6;
 * @return {number}
 */
proto.grpcform.Validator.prototype.getGreaterThanNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.grpcform.Validator.prototype.setGreaterThanNumber = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.Input.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Input.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Input.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Input} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Input.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, ""),
    placeholder: jspb.Message.getFieldWithDefault(msg, 2, ""),
    optionsList: jspb.Message.toObjectList(msg.getOptionsList(),
    proto.grpcform.Option.toObject, includeInstance),
    minLength: (f = msg.getMinLength()) && proto.grpcform.MinLength.toObject(includeInstance, f),
    maxLength: (f = msg.getMaxLength()) && proto.grpcform.MaxLength.toObject(includeInstance, f),
    regex: (f = msg.getRegex()) && proto.grpcform.Regex.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Input}
 */
proto.grpcform.Input.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Input;
  return proto.grpcform.Input.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Input} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Input}
 */
proto.grpcform.Input.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceholder(value);
      break;
    case 3:
      var value = new proto.grpcform.Option;
      reader.readMessage(value,proto.grpcform.Option.deserializeBinaryFromReader);
      msg.addOptions(value);
      break;
    case 4:
      var value = new proto.grpcform.MinLength;
      reader.readMessage(value,proto.grpcform.MinLength.deserializeBinaryFromReader);
      msg.setMinLength(value);
      break;
    case 5:
      var value = new proto.grpcform.MaxLength;
      reader.readMessage(value,proto.grpcform.MaxLength.deserializeBinaryFromReader);
      msg.setMaxLength(value);
      break;
    case 6:
      var value = new proto.grpcform.Regex;
      reader.readMessage(value,proto.grpcform.Regex.deserializeBinaryFromReader);
      msg.setRegex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Input.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Input.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Input} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Input.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlaceholder();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.grpcform.Option.serializeBinaryToWriter
    );
  }
  f = message.getMinLength();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.grpcform.MinLength.serializeBinaryToWriter
    );
  }
  f = message.getMaxLength();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.grpcform.MaxLength.serializeBinaryToWriter
    );
  }
  f = message.getRegex();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.grpcform.Regex.serializeBinaryToWriter
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.grpcform.Input.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.Input.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string placeholder = 2;
 * @return {string}
 */
proto.grpcform.Input.prototype.getPlaceholder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpcform.Input.prototype.setPlaceholder = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Option options = 3;
 * @return {!Array<!proto.grpcform.Option>}
 */
proto.grpcform.Input.prototype.getOptionsList = function() {
  return /** @type{!Array<!proto.grpcform.Option>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Option, 3));
};


/** @param {!Array<!proto.grpcform.Option>} value */
proto.grpcform.Input.prototype.setOptionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.grpcform.Option=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Option}
 */
proto.grpcform.Input.prototype.addOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.grpcform.Option, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.Input.prototype.clearOptionsList = function() {
  this.setOptionsList([]);
};


/**
 * optional MinLength min_length = 4;
 * @return {?proto.grpcform.MinLength}
 */
proto.grpcform.Input.prototype.getMinLength = function() {
  return /** @type{?proto.grpcform.MinLength} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.MinLength, 4));
};


/** @param {?proto.grpcform.MinLength|undefined} value */
proto.grpcform.Input.prototype.setMinLength = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Input.prototype.clearMinLength = function() {
  this.setMinLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Input.prototype.hasMinLength = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MaxLength max_length = 5;
 * @return {?proto.grpcform.MaxLength}
 */
proto.grpcform.Input.prototype.getMaxLength = function() {
  return /** @type{?proto.grpcform.MaxLength} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.MaxLength, 5));
};


/** @param {?proto.grpcform.MaxLength|undefined} value */
proto.grpcform.Input.prototype.setMaxLength = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Input.prototype.clearMaxLength = function() {
  this.setMaxLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Input.prototype.hasMaxLength = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Regex regex = 6;
 * @return {?proto.grpcform.Regex}
 */
proto.grpcform.Input.prototype.getRegex = function() {
  return /** @type{?proto.grpcform.Regex} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Regex, 6));
};


/** @param {?proto.grpcform.Regex|undefined} value */
proto.grpcform.Input.prototype.setRegex = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Input.prototype.clearRegex = function() {
  this.setRegex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Input.prototype.hasRegex = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.RadioGroup.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.RadioGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.RadioGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.RadioGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.RadioGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && proto.grpcform.Option.toObject(includeInstance, f),
    optionsList: jspb.Message.toObjectList(msg.getOptionsList(),
    proto.grpcform.Option.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.RadioGroup}
 */
proto.grpcform.RadioGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.RadioGroup;
  return proto.grpcform.RadioGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.RadioGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.RadioGroup}
 */
proto.grpcform.RadioGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Option;
      reader.readMessage(value,proto.grpcform.Option.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = new proto.grpcform.Option;
      reader.readMessage(value,proto.grpcform.Option.deserializeBinaryFromReader);
      msg.addOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.RadioGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.RadioGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.RadioGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.RadioGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.grpcform.Option.serializeBinaryToWriter
    );
  }
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.grpcform.Option.serializeBinaryToWriter
    );
  }
};


/**
 * optional Option value = 1;
 * @return {?proto.grpcform.Option}
 */
proto.grpcform.RadioGroup.prototype.getValue = function() {
  return /** @type{?proto.grpcform.Option} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Option, 1));
};


/** @param {?proto.grpcform.Option|undefined} value */
proto.grpcform.RadioGroup.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.RadioGroup.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.RadioGroup.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Option options = 2;
 * @return {!Array<!proto.grpcform.Option>}
 */
proto.grpcform.RadioGroup.prototype.getOptionsList = function() {
  return /** @type{!Array<!proto.grpcform.Option>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Option, 2));
};


/** @param {!Array<!proto.grpcform.Option>} value */
proto.grpcform.RadioGroup.prototype.setOptionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.grpcform.Option=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Option}
 */
proto.grpcform.RadioGroup.prototype.addOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.grpcform.Option, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.RadioGroup.prototype.clearOptionsList = function() {
  this.setOptionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.Select.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Select.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Select.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Select} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Select.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && proto.grpcform.Option.toObject(includeInstance, f),
    placeholder: (f = msg.getPlaceholder()) && proto.grpcform.Option.toObject(includeInstance, f),
    optionsList: jspb.Message.toObjectList(msg.getOptionsList(),
    proto.grpcform.Option.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Select}
 */
proto.grpcform.Select.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Select;
  return proto.grpcform.Select.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Select} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Select}
 */
proto.grpcform.Select.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Option;
      reader.readMessage(value,proto.grpcform.Option.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = new proto.grpcform.Option;
      reader.readMessage(value,proto.grpcform.Option.deserializeBinaryFromReader);
      msg.setPlaceholder(value);
      break;
    case 3:
      var value = new proto.grpcform.Option;
      reader.readMessage(value,proto.grpcform.Option.deserializeBinaryFromReader);
      msg.addOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Select.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Select.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Select} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Select.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.grpcform.Option.serializeBinaryToWriter
    );
  }
  f = message.getPlaceholder();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.grpcform.Option.serializeBinaryToWriter
    );
  }
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.grpcform.Option.serializeBinaryToWriter
    );
  }
};


/**
 * optional Option value = 1;
 * @return {?proto.grpcform.Option}
 */
proto.grpcform.Select.prototype.getValue = function() {
  return /** @type{?proto.grpcform.Option} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Option, 1));
};


/** @param {?proto.grpcform.Option|undefined} value */
proto.grpcform.Select.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Select.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Select.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Option placeholder = 2;
 * @return {?proto.grpcform.Option}
 */
proto.grpcform.Select.prototype.getPlaceholder = function() {
  return /** @type{?proto.grpcform.Option} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Option, 2));
};


/** @param {?proto.grpcform.Option|undefined} value */
proto.grpcform.Select.prototype.setPlaceholder = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Select.prototype.clearPlaceholder = function() {
  this.setPlaceholder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Select.prototype.hasPlaceholder = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Option options = 3;
 * @return {!Array<!proto.grpcform.Option>}
 */
proto.grpcform.Select.prototype.getOptionsList = function() {
  return /** @type{!Array<!proto.grpcform.Option>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Option, 3));
};


/** @param {!Array<!proto.grpcform.Option>} value */
proto.grpcform.Select.prototype.setOptionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.grpcform.Option=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Option}
 */
proto.grpcform.Select.prototype.addOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.grpcform.Option, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.Select.prototype.clearOptionsList = function() {
  this.setOptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Slider.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Slider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Slider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Slider.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    min: jspb.Message.getFieldWithDefault(msg, 2, 0),
    max: jspb.Message.getFieldWithDefault(msg, 3, 0),
    step: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Slider}
 */
proto.grpcform.Slider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Slider;
  return proto.grpcform.Slider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Slider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Slider}
 */
proto.grpcform.Slider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMax(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStep(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Slider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Slider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Slider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Slider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMin();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getStep();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 value = 1;
 * @return {number}
 */
proto.grpcform.Slider.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grpcform.Slider.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 min = 2;
 * @return {number}
 */
proto.grpcform.Slider.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.grpcform.Slider.prototype.setMin = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 max = 3;
 * @return {number}
 */
proto.grpcform.Slider.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.grpcform.Slider.prototype.setMax = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 step = 4;
 * @return {number}
 */
proto.grpcform.Slider.prototype.getStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.grpcform.Slider.prototype.setStep = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Option.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Option.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Option} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Option.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Option}
 */
proto.grpcform.Option.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Option;
  return proto.grpcform.Option.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Option} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Option}
 */
proto.grpcform.Option.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Option.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Option.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Option} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Option.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 index = 1;
 * @return {number}
 */
proto.grpcform.Option.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grpcform.Option.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.grpcform.Option.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpcform.Option.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.MinLength.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.MinLength.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.MinLength} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.MinLength.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.MinLength}
 */
proto.grpcform.MinLength.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.MinLength;
  return proto.grpcform.MinLength.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.MinLength} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.MinLength}
 */
proto.grpcform.MinLength.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.MinLength.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.MinLength.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.MinLength} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.MinLength.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 value = 1;
 * @return {number}
 */
proto.grpcform.MinLength.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grpcform.MinLength.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.grpcform.MinLength.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpcform.MinLength.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.MaxLength.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.MaxLength.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.MaxLength} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.MaxLength.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.MaxLength}
 */
proto.grpcform.MaxLength.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.MaxLength;
  return proto.grpcform.MaxLength.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.MaxLength} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.MaxLength}
 */
proto.grpcform.MaxLength.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.MaxLength.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.MaxLength.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.MaxLength} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.MaxLength.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 value = 1;
 * @return {number}
 */
proto.grpcform.MaxLength.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grpcform.MaxLength.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.grpcform.MaxLength.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpcform.MaxLength.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Regex.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Regex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Regex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Regex.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Regex}
 */
proto.grpcform.Regex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Regex;
  return proto.grpcform.Regex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Regex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Regex}
 */
proto.grpcform.Regex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Regex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Regex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Regex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Regex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.grpcform.Regex.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.Regex.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.grpcform.Regex.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpcform.Regex.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Button.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Button.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Button} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Button.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    buttonFunc: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Button}
 */
proto.grpcform.Button.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Button;
  return proto.grpcform.Button.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Button} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Button}
 */
proto.grpcform.Button.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {!proto.grpcform.STATUS} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.grpcform.BUTTON_FUNC} */ (reader.readEnum());
      msg.setButtonFunc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Button.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Button.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Button} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Button.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getButtonFunc();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.grpcform.Button.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.Button.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional STATUS status = 2;
 * @return {!proto.grpcform.STATUS}
 */
proto.grpcform.Button.prototype.getStatus = function() {
  return /** @type {!proto.grpcform.STATUS} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.grpcform.STATUS} value */
proto.grpcform.Button.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional BUTTON_FUNC button_func = 3;
 * @return {!proto.grpcform.BUTTON_FUNC}
 */
proto.grpcform.Button.prototype.getButtonFunc = function() {
  return /** @type {!proto.grpcform.BUTTON_FUNC} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.grpcform.BUTTON_FUNC} value */
proto.grpcform.Button.prototype.setButtonFunc = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.grpcform.STATUS = {
  ACTIVE: 0,
  REQUIRED: 1,
  DISABLED: 2,
  HIDDEN: 3
};

/**
 * @enum {number}
 */
proto.grpcform.BUTTON_FUNC = {
  VALIDATE: 0,
  RESET: 1,
  SEND: 2
};

goog.object.extend(exports, proto.grpcform);
