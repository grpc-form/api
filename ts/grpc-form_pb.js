/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.grpcform.ActiveIf', null, global);
goog.exportSymbol('proto.grpcform.Button', null, global);
goog.exportSymbol('proto.grpcform.ButtonFuncType', null, global);
goog.exportSymbol('proto.grpcform.ButtonStatus', null, global);
goog.exportSymbol('proto.grpcform.DisabledIf', null, global);
goog.exportSymbol('proto.grpcform.Field', null, global);
goog.exportSymbol('proto.grpcform.FieldStatus', null, global);
goog.exportSymbol('proto.grpcform.Form', null, global);
goog.exportSymbol('proto.grpcform.GetFormRequest', null, global);
goog.exportSymbol('proto.grpcform.HiddenIf', null, global);
goog.exportSymbol('proto.grpcform.NumericField', null, global);
goog.exportSymbol('proto.grpcform.Option', null, global);
goog.exportSymbol('proto.grpcform.RequiredIf', null, global);
goog.exportSymbol('proto.grpcform.SelectField', null, global);
goog.exportSymbol('proto.grpcform.SelectType', null, global);
goog.exportSymbol('proto.grpcform.SendFormResponse', null, global);
goog.exportSymbol('proto.grpcform.TextField', null, global);
goog.exportSymbol('proto.grpcform.Validator', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.GetFormRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.GetFormRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.GetFormRequest.displayName = 'proto.grpcform.GetFormRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.SendFormResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.SendFormResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.SendFormResponse.displayName = 'proto.grpcform.SendFormResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Form = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.Form.repeatedFields_, null);
};
goog.inherits(proto.grpcform.Form, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Form.displayName = 'proto.grpcform.Form';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Field = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.Field, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Field.displayName = 'proto.grpcform.Field';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.ActiveIf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.ActiveIf.repeatedFields_, null);
};
goog.inherits(proto.grpcform.ActiveIf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.ActiveIf.displayName = 'proto.grpcform.ActiveIf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.RequiredIf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.RequiredIf.repeatedFields_, null);
};
goog.inherits(proto.grpcform.RequiredIf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.RequiredIf.displayName = 'proto.grpcform.RequiredIf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.DisabledIf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.DisabledIf.repeatedFields_, null);
};
goog.inherits(proto.grpcform.DisabledIf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.DisabledIf.displayName = 'proto.grpcform.DisabledIf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.HiddenIf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.HiddenIf.repeatedFields_, null);
};
goog.inherits(proto.grpcform.HiddenIf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.HiddenIf.displayName = 'proto.grpcform.HiddenIf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Validator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.Validator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Validator.displayName = 'proto.grpcform.Validator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.TextField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.TextField.repeatedFields_, null);
};
goog.inherits(proto.grpcform.TextField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.TextField.displayName = 'proto.grpcform.TextField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.SelectField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcform.SelectField.repeatedFields_, null);
};
goog.inherits(proto.grpcform.SelectField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.SelectField.displayName = 'proto.grpcform.SelectField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Option = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.Option, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Option.displayName = 'proto.grpcform.Option';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.NumericField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.NumericField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.NumericField.displayName = 'proto.grpcform.NumericField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcform.Button = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcform.Button, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpcform.Button.displayName = 'proto.grpcform.Button';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.GetFormRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.GetFormRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.GetFormRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.GetFormRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.GetFormRequest}
 */
proto.grpcform.GetFormRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.GetFormRequest;
  return proto.grpcform.GetFormRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.GetFormRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.GetFormRequest}
 */
proto.grpcform.GetFormRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.GetFormRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.GetFormRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.GetFormRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.GetFormRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.grpcform.GetFormRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.GetFormRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.SendFormResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.SendFormResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.SendFormResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.SendFormResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    form: (f = msg.getForm()) && proto.grpcform.Form.toObject(includeInstance, f),
    succeed: jspb.Message.getFieldWithDefault(msg, 2, false),
    message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.SendFormResponse}
 */
proto.grpcform.SendFormResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.SendFormResponse;
  return proto.grpcform.SendFormResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.SendFormResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.SendFormResponse}
 */
proto.grpcform.SendFormResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Form;
      reader.readMessage(value,proto.grpcform.Form.deserializeBinaryFromReader);
      msg.setForm(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSucceed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.SendFormResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.SendFormResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.SendFormResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.SendFormResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForm();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.grpcform.Form.serializeBinaryToWriter
    );
  }
  f = message.getSucceed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Form form = 1;
 * @return {?proto.grpcform.Form}
 */
proto.grpcform.SendFormResponse.prototype.getForm = function() {
  return /** @type{?proto.grpcform.Form} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Form, 1));
};


/** @param {?proto.grpcform.Form|undefined} value */
proto.grpcform.SendFormResponse.prototype.setForm = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.SendFormResponse.prototype.clearForm = function() {
  this.setForm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.SendFormResponse.prototype.hasForm = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool succeed = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.grpcform.SendFormResponse.prototype.getSucceed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.grpcform.SendFormResponse.prototype.setSucceed = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.grpcform.SendFormResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.grpcform.SendFormResponse.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.Form.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Form.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Form.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Form} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Form.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.grpcform.Field.toObject, includeInstance),
    buttonsList: jspb.Message.toObjectList(msg.getButtonsList(),
    proto.grpcform.Button.toObject, includeInstance),
    valid: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Form}
 */
proto.grpcform.Form.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Form;
  return proto.grpcform.Form.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Form} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Form}
 */
proto.grpcform.Form.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.grpcform.Field;
      reader.readMessage(value,proto.grpcform.Field.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 3:
      var value = new proto.grpcform.Button;
      reader.readMessage(value,proto.grpcform.Button.deserializeBinaryFromReader);
      msg.addButtons(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Form.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Form.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Form} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Form.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.grpcform.Field.serializeBinaryToWriter
    );
  }
  f = message.getButtonsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.grpcform.Button.serializeBinaryToWriter
    );
  }
  f = message.getValid();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.grpcform.Form.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.Form.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Field fields = 2;
 * @return {!Array<!proto.grpcform.Field>}
 */
proto.grpcform.Form.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.grpcform.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Field, 2));
};


/** @param {!Array<!proto.grpcform.Field>} value */
proto.grpcform.Form.prototype.setFieldsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.grpcform.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Field}
 */
proto.grpcform.Form.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.grpcform.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.Form.prototype.clearFieldsList = function() {
  this.setFieldsList([]);
};


/**
 * repeated Button buttons = 3;
 * @return {!Array<!proto.grpcform.Button>}
 */
proto.grpcform.Form.prototype.getButtonsList = function() {
  return /** @type{!Array<!proto.grpcform.Button>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Button, 3));
};


/** @param {!Array<!proto.grpcform.Button>} value */
proto.grpcform.Form.prototype.setButtonsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.grpcform.Button=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Button}
 */
proto.grpcform.Form.prototype.addButtons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.grpcform.Button, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.Form.prototype.clearButtonsList = function() {
  this.setButtonsList([]);
};


/**
 * optional bool valid = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.grpcform.Form.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.grpcform.Form.prototype.setValid = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Field.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Field.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Field} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Field.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    instantValidate: jspb.Message.getFieldWithDefault(msg, 3, false),
    error: jspb.Message.getFieldWithDefault(msg, 4, ""),
    textField: (f = msg.getTextField()) && proto.grpcform.TextField.toObject(includeInstance, f),
    selectField: (f = msg.getSelectField()) && proto.grpcform.SelectField.toObject(includeInstance, f),
    numericField: (f = msg.getNumericField()) && proto.grpcform.NumericField.toObject(includeInstance, f),
    activeif: (f = msg.getActiveif()) && proto.grpcform.ActiveIf.toObject(includeInstance, f),
    requiredIf: (f = msg.getRequiredIf()) && proto.grpcform.RequiredIf.toObject(includeInstance, f),
    disabledIf: (f = msg.getDisabledIf()) && proto.grpcform.DisabledIf.toObject(includeInstance, f),
    hiddenIf: (f = msg.getHiddenIf()) && proto.grpcform.HiddenIf.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Field}
 */
proto.grpcform.Field.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Field;
  return proto.grpcform.Field.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Field} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Field}
 */
proto.grpcform.Field.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {!proto.grpcform.FieldStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInstantValidate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 10:
      var value = new proto.grpcform.TextField;
      reader.readMessage(value,proto.grpcform.TextField.deserializeBinaryFromReader);
      msg.setTextField(value);
      break;
    case 11:
      var value = new proto.grpcform.SelectField;
      reader.readMessage(value,proto.grpcform.SelectField.deserializeBinaryFromReader);
      msg.setSelectField(value);
      break;
    case 12:
      var value = new proto.grpcform.NumericField;
      reader.readMessage(value,proto.grpcform.NumericField.deserializeBinaryFromReader);
      msg.setNumericField(value);
      break;
    case 20:
      var value = new proto.grpcform.ActiveIf;
      reader.readMessage(value,proto.grpcform.ActiveIf.deserializeBinaryFromReader);
      msg.setActiveif(value);
      break;
    case 21:
      var value = new proto.grpcform.RequiredIf;
      reader.readMessage(value,proto.grpcform.RequiredIf.deserializeBinaryFromReader);
      msg.setRequiredIf(value);
      break;
    case 22:
      var value = new proto.grpcform.DisabledIf;
      reader.readMessage(value,proto.grpcform.DisabledIf.deserializeBinaryFromReader);
      msg.setDisabledIf(value);
      break;
    case 23:
      var value = new proto.grpcform.HiddenIf;
      reader.readMessage(value,proto.grpcform.HiddenIf.deserializeBinaryFromReader);
      msg.setHiddenIf(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Field.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Field.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Field} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Field.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getInstantValidate();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTextField();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.grpcform.TextField.serializeBinaryToWriter
    );
  }
  f = message.getSelectField();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.grpcform.SelectField.serializeBinaryToWriter
    );
  }
  f = message.getNumericField();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.grpcform.NumericField.serializeBinaryToWriter
    );
  }
  f = message.getActiveif();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.grpcform.ActiveIf.serializeBinaryToWriter
    );
  }
  f = message.getRequiredIf();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.grpcform.RequiredIf.serializeBinaryToWriter
    );
  }
  f = message.getDisabledIf();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.grpcform.DisabledIf.serializeBinaryToWriter
    );
  }
  f = message.getHiddenIf();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.grpcform.HiddenIf.serializeBinaryToWriter
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.grpcform.Field.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.Field.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FieldStatus status = 2;
 * @return {!proto.grpcform.FieldStatus}
 */
proto.grpcform.Field.prototype.getStatus = function() {
  return /** @type {!proto.grpcform.FieldStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.grpcform.FieldStatus} value */
proto.grpcform.Field.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool instant_validate = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.getInstantValidate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.grpcform.Field.prototype.setInstantValidate = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string error = 4;
 * @return {string}
 */
proto.grpcform.Field.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.grpcform.Field.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional TextField text_field = 10;
 * @return {?proto.grpcform.TextField}
 */
proto.grpcform.Field.prototype.getTextField = function() {
  return /** @type{?proto.grpcform.TextField} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.TextField, 10));
};


/** @param {?proto.grpcform.TextField|undefined} value */
proto.grpcform.Field.prototype.setTextField = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearTextField = function() {
  this.setTextField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasTextField = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SelectField select_field = 11;
 * @return {?proto.grpcform.SelectField}
 */
proto.grpcform.Field.prototype.getSelectField = function() {
  return /** @type{?proto.grpcform.SelectField} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.SelectField, 11));
};


/** @param {?proto.grpcform.SelectField|undefined} value */
proto.grpcform.Field.prototype.setSelectField = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearSelectField = function() {
  this.setSelectField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasSelectField = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional NumericField numeric_field = 12;
 * @return {?proto.grpcform.NumericField}
 */
proto.grpcform.Field.prototype.getNumericField = function() {
  return /** @type{?proto.grpcform.NumericField} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.NumericField, 12));
};


/** @param {?proto.grpcform.NumericField|undefined} value */
proto.grpcform.Field.prototype.setNumericField = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearNumericField = function() {
  this.setNumericField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasNumericField = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ActiveIf activeIf = 20;
 * @return {?proto.grpcform.ActiveIf}
 */
proto.grpcform.Field.prototype.getActiveif = function() {
  return /** @type{?proto.grpcform.ActiveIf} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.ActiveIf, 20));
};


/** @param {?proto.grpcform.ActiveIf|undefined} value */
proto.grpcform.Field.prototype.setActiveif = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearActiveif = function() {
  this.setActiveif(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasActiveif = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional RequiredIf required_if = 21;
 * @return {?proto.grpcform.RequiredIf}
 */
proto.grpcform.Field.prototype.getRequiredIf = function() {
  return /** @type{?proto.grpcform.RequiredIf} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.RequiredIf, 21));
};


/** @param {?proto.grpcform.RequiredIf|undefined} value */
proto.grpcform.Field.prototype.setRequiredIf = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearRequiredIf = function() {
  this.setRequiredIf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasRequiredIf = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional DisabledIf disabled_if = 22;
 * @return {?proto.grpcform.DisabledIf}
 */
proto.grpcform.Field.prototype.getDisabledIf = function() {
  return /** @type{?proto.grpcform.DisabledIf} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.DisabledIf, 22));
};


/** @param {?proto.grpcform.DisabledIf|undefined} value */
proto.grpcform.Field.prototype.setDisabledIf = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearDisabledIf = function() {
  this.setDisabledIf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasDisabledIf = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional HiddenIf hidden_if = 23;
 * @return {?proto.grpcform.HiddenIf}
 */
proto.grpcform.Field.prototype.getHiddenIf = function() {
  return /** @type{?proto.grpcform.HiddenIf} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.HiddenIf, 23));
};


/** @param {?proto.grpcform.HiddenIf|undefined} value */
proto.grpcform.Field.prototype.setHiddenIf = function(value) {
  jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Field.prototype.clearHiddenIf = function() {
  this.setHiddenIf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Field.prototype.hasHiddenIf = function() {
  return jspb.Message.getField(this, 23) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.ActiveIf.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.ActiveIf.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.ActiveIf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.ActiveIf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.ActiveIf.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.grpcform.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.ActiveIf}
 */
proto.grpcform.ActiveIf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.ActiveIf;
  return proto.grpcform.ActiveIf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.ActiveIf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.ActiveIf}
 */
proto.grpcform.ActiveIf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Validator;
      reader.readMessage(value,proto.grpcform.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.ActiveIf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.ActiveIf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.ActiveIf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.ActiveIf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpcform.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Validator validators = 1;
 * @return {!Array<!proto.grpcform.Validator>}
 */
proto.grpcform.ActiveIf.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.grpcform.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Validator, 1));
};


/** @param {!Array<!proto.grpcform.Validator>} value */
proto.grpcform.ActiveIf.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpcform.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.ActiveIf.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpcform.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.ActiveIf.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.RequiredIf.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.RequiredIf.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.RequiredIf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.RequiredIf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.RequiredIf.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.grpcform.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.RequiredIf}
 */
proto.grpcform.RequiredIf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.RequiredIf;
  return proto.grpcform.RequiredIf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.RequiredIf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.RequiredIf}
 */
proto.grpcform.RequiredIf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Validator;
      reader.readMessage(value,proto.grpcform.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.RequiredIf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.RequiredIf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.RequiredIf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.RequiredIf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpcform.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Validator validators = 1;
 * @return {!Array<!proto.grpcform.Validator>}
 */
proto.grpcform.RequiredIf.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.grpcform.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Validator, 1));
};


/** @param {!Array<!proto.grpcform.Validator>} value */
proto.grpcform.RequiredIf.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpcform.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.RequiredIf.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpcform.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.RequiredIf.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.DisabledIf.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.DisabledIf.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.DisabledIf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.DisabledIf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.DisabledIf.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.grpcform.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.DisabledIf}
 */
proto.grpcform.DisabledIf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.DisabledIf;
  return proto.grpcform.DisabledIf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.DisabledIf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.DisabledIf}
 */
proto.grpcform.DisabledIf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Validator;
      reader.readMessage(value,proto.grpcform.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.DisabledIf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.DisabledIf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.DisabledIf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.DisabledIf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpcform.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Validator validators = 1;
 * @return {!Array<!proto.grpcform.Validator>}
 */
proto.grpcform.DisabledIf.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.grpcform.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Validator, 1));
};


/** @param {!Array<!proto.grpcform.Validator>} value */
proto.grpcform.DisabledIf.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpcform.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.DisabledIf.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpcform.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.DisabledIf.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.HiddenIf.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.HiddenIf.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.HiddenIf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.HiddenIf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.HiddenIf.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.grpcform.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.HiddenIf}
 */
proto.grpcform.HiddenIf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.HiddenIf;
  return proto.grpcform.HiddenIf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.HiddenIf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.HiddenIf}
 */
proto.grpcform.HiddenIf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpcform.Validator;
      reader.readMessage(value,proto.grpcform.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.HiddenIf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.HiddenIf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.HiddenIf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.HiddenIf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpcform.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Validator validators = 1;
 * @return {!Array<!proto.grpcform.Validator>}
 */
proto.grpcform.HiddenIf.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.grpcform.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Validator, 1));
};


/** @param {!Array<!proto.grpcform.Validator>} value */
proto.grpcform.HiddenIf.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpcform.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.HiddenIf.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpcform.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.HiddenIf.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Validator.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Validator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Validator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Validator.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    equalText: jspb.Message.getFieldWithDefault(msg, 10, ""),
    smallerThanLength: jspb.Message.getFieldWithDefault(msg, 11, 0),
    greterThanLength: jspb.Message.getFieldWithDefault(msg, 12, 0),
    equalNumber: jspb.Message.getFieldWithDefault(msg, 20, 0),
    smallerThanNumber: jspb.Message.getFieldWithDefault(msg, 21, 0),
    greaterThanNumber: jspb.Message.getFieldWithDefault(msg, 22, 0),
    equalOption: (f = msg.getEqualOption()) && proto.grpcform.Option.toObject(includeInstance, f),
    regex: jspb.Message.getFieldWithDefault(msg, 40, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.Validator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Validator;
  return proto.grpcform.Validator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Validator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Validator}
 */
proto.grpcform.Validator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIndex(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEqualText(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmallerThanLength(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGreterThanLength(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEqualNumber(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmallerThanNumber(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGreaterThanNumber(value);
      break;
    case 30:
      var value = new proto.grpcform.Option;
      reader.readMessage(value,proto.grpcform.Option.deserializeBinaryFromReader);
      msg.setEqualOption(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Validator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Validator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Validator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Validator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEqualText();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSmallerThanLength();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getGreterThanLength();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getEqualNumber();
  if (f !== 0) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = message.getSmallerThanNumber();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getGreaterThanNumber();
  if (f !== 0) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = message.getEqualOption();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.grpcform.Option.serializeBinaryToWriter
    );
  }
  f = message.getRegex();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
};


/**
 * optional int64 index = 1;
 * @return {number}
 */
proto.grpcform.Validator.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grpcform.Validator.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string equal_text = 10;
 * @return {string}
 */
proto.grpcform.Validator.prototype.getEqualText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.grpcform.Validator.prototype.setEqualText = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int64 smaller_than_length = 11;
 * @return {number}
 */
proto.grpcform.Validator.prototype.getSmallerThanLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.grpcform.Validator.prototype.setSmallerThanLength = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 greter_than_length = 12;
 * @return {number}
 */
proto.grpcform.Validator.prototype.getGreterThanLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.grpcform.Validator.prototype.setGreterThanLength = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 equal_number = 20;
 * @return {number}
 */
proto.grpcform.Validator.prototype.getEqualNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.grpcform.Validator.prototype.setEqualNumber = function(value) {
  jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int64 smaller_than_number = 21;
 * @return {number}
 */
proto.grpcform.Validator.prototype.getSmallerThanNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.grpcform.Validator.prototype.setSmallerThanNumber = function(value) {
  jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int64 greater_than_number = 22;
 * @return {number}
 */
proto.grpcform.Validator.prototype.getGreaterThanNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.grpcform.Validator.prototype.setGreaterThanNumber = function(value) {
  jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional Option equal_option = 30;
 * @return {?proto.grpcform.Option}
 */
proto.grpcform.Validator.prototype.getEqualOption = function() {
  return /** @type{?proto.grpcform.Option} */ (
    jspb.Message.getWrapperField(this, proto.grpcform.Option, 30));
};


/** @param {?proto.grpcform.Option|undefined} value */
proto.grpcform.Validator.prototype.setEqualOption = function(value) {
  jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.grpcform.Validator.prototype.clearEqualOption = function() {
  this.setEqualOption(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpcform.Validator.prototype.hasEqualOption = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional string regex = 40;
 * @return {string}
 */
proto.grpcform.Validator.prototype.getRegex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/** @param {string} value */
proto.grpcform.Validator.prototype.setRegex = function(value) {
  jspb.Message.setProto3StringField(this, 40, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.TextField.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.TextField.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.TextField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.TextField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.TextField.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, ""),
    optionsList: jspb.Message.toObjectList(msg.getOptionsList(),
    proto.grpcform.Option.toObject, includeInstance),
    min: jspb.Message.getFieldWithDefault(msg, 10, 0),
    minError: jspb.Message.getFieldWithDefault(msg, 20, ""),
    max: jspb.Message.getFieldWithDefault(msg, 11, 0),
    maxError: jspb.Message.getFieldWithDefault(msg, 21, ""),
    regex: jspb.Message.getFieldWithDefault(msg, 12, ""),
    regexError: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.TextField}
 */
proto.grpcform.TextField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.TextField;
  return proto.grpcform.TextField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.TextField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.TextField}
 */
proto.grpcform.TextField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = new proto.grpcform.Option;
      reader.readMessage(value,proto.grpcform.Option.deserializeBinaryFromReader);
      msg.addOptions(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMin(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinError(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMax(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxError(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegex(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegexError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.TextField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.TextField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.TextField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.TextField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.grpcform.Option.serializeBinaryToWriter
    );
  }
  f = message.getMin();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getMinError();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getMaxError();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getRegex();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getRegexError();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.grpcform.TextField.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.TextField.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Option options = 2;
 * @return {!Array<!proto.grpcform.Option>}
 */
proto.grpcform.TextField.prototype.getOptionsList = function() {
  return /** @type{!Array<!proto.grpcform.Option>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Option, 2));
};


/** @param {!Array<!proto.grpcform.Option>} value */
proto.grpcform.TextField.prototype.setOptionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.grpcform.Option=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Option}
 */
proto.grpcform.TextField.prototype.addOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.grpcform.Option, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.TextField.prototype.clearOptionsList = function() {
  this.setOptionsList([]);
};


/**
 * optional int64 min = 10;
 * @return {number}
 */
proto.grpcform.TextField.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.grpcform.TextField.prototype.setMin = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string min_error = 20;
 * @return {string}
 */
proto.grpcform.TextField.prototype.getMinError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.grpcform.TextField.prototype.setMinError = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int64 max = 11;
 * @return {number}
 */
proto.grpcform.TextField.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.grpcform.TextField.prototype.setMax = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string max_error = 21;
 * @return {string}
 */
proto.grpcform.TextField.prototype.getMaxError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.grpcform.TextField.prototype.setMaxError = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string regex = 12;
 * @return {string}
 */
proto.grpcform.TextField.prototype.getRegex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.grpcform.TextField.prototype.setRegex = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string regex_error = 22;
 * @return {string}
 */
proto.grpcform.TextField.prototype.getRegexError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.grpcform.TextField.prototype.setRegexError = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcform.SelectField.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.SelectField.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.SelectField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.SelectField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.SelectField.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    optionsList: jspb.Message.toObjectList(msg.getOptionsList(),
    proto.grpcform.Option.toObject, includeInstance),
    error: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.SelectField}
 */
proto.grpcform.SelectField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.SelectField;
  return proto.grpcform.SelectField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.SelectField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.SelectField}
 */
proto.grpcform.SelectField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {!proto.grpcform.SelectType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.grpcform.Option;
      reader.readMessage(value,proto.grpcform.Option.deserializeBinaryFromReader);
      msg.addOptions(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.SelectField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.SelectField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.SelectField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.SelectField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.grpcform.Option.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 index = 1;
 * @return {number}
 */
proto.grpcform.SelectField.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grpcform.SelectField.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional SelectType type = 2;
 * @return {!proto.grpcform.SelectType}
 */
proto.grpcform.SelectField.prototype.getType = function() {
  return /** @type {!proto.grpcform.SelectType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.grpcform.SelectType} value */
proto.grpcform.SelectField.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated Option options = 3;
 * @return {!Array<!proto.grpcform.Option>}
 */
proto.grpcform.SelectField.prototype.getOptionsList = function() {
  return /** @type{!Array<!proto.grpcform.Option>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcform.Option, 3));
};


/** @param {!Array<!proto.grpcform.Option>} value */
proto.grpcform.SelectField.prototype.setOptionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.grpcform.Option=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcform.Option}
 */
proto.grpcform.SelectField.prototype.addOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.grpcform.Option, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.grpcform.SelectField.prototype.clearOptionsList = function() {
  this.setOptionsList([]);
};


/**
 * optional string error = 4;
 * @return {string}
 */
proto.grpcform.SelectField.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.grpcform.SelectField.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Option.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Option.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Option} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Option.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Option}
 */
proto.grpcform.Option.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Option;
  return proto.grpcform.Option.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Option} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Option}
 */
proto.grpcform.Option.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Option.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Option.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Option} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Option.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 index = 1;
 * @return {number}
 */
proto.grpcform.Option.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grpcform.Option.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.grpcform.Option.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpcform.Option.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.NumericField.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.NumericField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.NumericField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.NumericField.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    step: jspb.Message.getFieldWithDefault(msg, 2, 0),
    min: jspb.Message.getFieldWithDefault(msg, 10, 0),
    minError: jspb.Message.getFieldWithDefault(msg, 20, ""),
    max: jspb.Message.getFieldWithDefault(msg, 11, 0),
    maxError: jspb.Message.getFieldWithDefault(msg, 21, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.NumericField}
 */
proto.grpcform.NumericField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.NumericField;
  return proto.grpcform.NumericField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.NumericField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.NumericField}
 */
proto.grpcform.NumericField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStep(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMin(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinError(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMax(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.NumericField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.NumericField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.NumericField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.NumericField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStep();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMin();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getMinError();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getMaxError();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
};


/**
 * optional int64 value = 1;
 * @return {number}
 */
proto.grpcform.NumericField.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grpcform.NumericField.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 step = 2;
 * @return {number}
 */
proto.grpcform.NumericField.prototype.getStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.grpcform.NumericField.prototype.setStep = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 min = 10;
 * @return {number}
 */
proto.grpcform.NumericField.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.grpcform.NumericField.prototype.setMin = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string min_error = 20;
 * @return {string}
 */
proto.grpcform.NumericField.prototype.getMinError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.grpcform.NumericField.prototype.setMinError = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int64 max = 11;
 * @return {number}
 */
proto.grpcform.NumericField.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.grpcform.NumericField.prototype.setMax = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string max_error = 21;
 * @return {string}
 */
proto.grpcform.NumericField.prototype.getMaxError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.grpcform.NumericField.prototype.setMaxError = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcform.Button.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcform.Button.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcform.Button} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Button.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcform.Button}
 */
proto.grpcform.Button.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcform.Button;
  return proto.grpcform.Button.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcform.Button} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcform.Button}
 */
proto.grpcform.Button.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {!proto.grpcform.ButtonStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.grpcform.ButtonFuncType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcform.Button.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcform.Button.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcform.Button} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcform.Button.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.grpcform.Button.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcform.Button.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ButtonStatus status = 2;
 * @return {!proto.grpcform.ButtonStatus}
 */
proto.grpcform.Button.prototype.getStatus = function() {
  return /** @type {!proto.grpcform.ButtonStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.grpcform.ButtonStatus} value */
proto.grpcform.Button.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ButtonFuncType type = 3;
 * @return {!proto.grpcform.ButtonFuncType}
 */
proto.grpcform.Button.prototype.getType = function() {
  return /** @type {!proto.grpcform.ButtonFuncType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.grpcform.ButtonFuncType} value */
proto.grpcform.Button.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.grpcform.FieldStatus = {
  FIELD_STATUS_UNSPECIFIED: 0,
  FIELD_STATUS_ACTIVE: 1,
  FIELD_STATUS_REQUIRED: 2,
  FIELD_STATUS_DISABLED: 3,
  FIELD_STATUS_HIDDEN: 4
};

/**
 * @enum {number}
 */
proto.grpcform.SelectType = {
  SELECT_TYPE_UNSPECIFIED: 0,
  SELECT_TYPE_SIMPLE: 1,
  SELECT_TYPE_MULTI: 2
};

/**
 * @enum {number}
 */
proto.grpcform.ButtonStatus = {
  BUTTON_STATUS_UNSPECIFIED: 0,
  BUTTON_ACTIVE: 1,
  BUTTON_DISABLED: 3,
  BUTTON_HIDDEN: 4
};

/**
 * @enum {number}
 */
proto.grpcform.ButtonFuncType = {
  BUTTON_FUNC_UNSPECIFIED: 0,
  VALIDATE: 1,
  RESET: 2,
  SEND: 3
};

goog.object.extend(exports, proto.grpcform);
